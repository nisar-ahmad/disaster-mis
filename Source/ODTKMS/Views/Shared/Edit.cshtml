@using BootstrapSupport
@using System.Reflection

@model Object
@{
    var action = ViewContext.RouteData.GetRequiredString("action");
    action = (string.Compare(action, "Create", true) == 0 ? "Add" : action);

    ViewBag.Title = string.Format("{0} {1}", action, @Model.GetLabel());

    var idPropertyName = Model.IdentifierPropertyName();
}

<div class="title">
    @ViewBag.Title
    <div class="float-right">
        @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-info" })
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-horizontal">

        @foreach (var property in Model.Properties())
        {
            if (!property.IsVirtual())
            {
                if (property.Name == idPropertyName || !property.IsVisible())
                {
                    @Html.Hidden(property.Name)
                }
                else
                {
                    <div class="form-group">
                        @Html.Label(property.GetLabel(), new { @class = "control-label col-md-2", @for = property.Name })
                        <div class="col-md-10">
                            @if (property.PropertyType.IsEnum)
                            {
                                @Html.DropDownList(property.Name, new SelectList(Enum.GetValues(property.PropertyType)), new { @class = "form-control" })
                            }
                            else if (property.IsForeignKey())
                            {
                                @Html.DropDownList(property.Name, null, string.Format("-- Select {0} --", property.GetLabel()), new { @class = "form-control" })
                            }
                            else if (property.IsVisible())
                            {
                                @Html.Editor(property.Name, new { htmlAttributes = new { @class = "form-control" } })
                            }

                            @Html.ValidationMessage(property.Name, null, new { @class = "text-danger" })
                        </div>
                    </div>
                }
            }
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-primary">Save</button> | @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
